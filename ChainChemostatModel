library(deSolve)
model <- function(t, X, parameters) {
  with (as.list(parameters),{
    dy1=D*(s1+0.01*sin(2*pi*t/24)-X[1])-(m1/g1)*(X[1]/(k1+X[1]))*X[2]-(m2/g2)*(X[1]/(k2+X[1]))*X[3]
    dy2=m1*(X[1]/(k1+X[1]))*X[2]-D*X[2]
    dy3=m2*(X[1]/(k2+X[1]))*X[3]-D*X[3]
    list(c(dy1, dy2, dy3))
  })
}
model1 <- function(t, X, parameters) {
  with (as.list(parameters),{
    dx1=D*(s1+0.01*sin(2*pi*t/24)-X[1])-(m1/g1)*(X[1]/(k1+X[1]))*X[2]
    dx2=m1*(X[1]/(k1+X[1]))*X[2]-D*X[2]
    dx3=D*(X[1]-X[3])-(m1/g1)*(X[3]/(k1+X[3]))*X[4]-(m2/g2)*(X[3]/(k2+X[3]))*X[5]
    dx4=m1*(X[3]/(k1+X[3]))*X[4]+D*X[2]-D*X[4]
    dx5=m2*(X[3]/(k2+X[3]))*X[5]-D*X[5]
    list(c(dx1, dx2, dx3, dx4, dx5))
  })
}
#parms <- c(D=0.2, s1=0.1, m1= 1.6,k1 =0.2,g1=0.35, m2= 1.4, k2 = 0.03,g2=0.4)
#Y0   <- c(0.001, 0.1, 0.005)
#Y1   <- c(0.001, 0.1, 0.1, 0.1, 0.005)
times <- seq(0,100,0.1)
#parms2 <- c(D=0.2, s1=0.14, m1= 1.6,k1 =0.2,g1=10, m2= 1.4, k2 = 0.03,g2=2)

eqv1= function(t){exp(D*t)*D*0.01*sin(2*pi*t/24)}
av1= function(t){integrate(eqv1, lower =  -Inf, upper = t)$value}
## define the washout
vp1= function(t){exp(-D*t)*av1(t)}
## define Sigma_0
S0= function(t){s1+vp1(t)}

av2= function(t){(m2*S0(t)/(k2+S0(t)))}
lista_1=seq(0,25, 1)
U<- numeric(length(lista_1))

# display the results
library(ggplot2)
library(reshape2)
library(latex2exp)
library(gridExtra)
lista_s=c(0.03,0.06,0.09,0.12,0.15)
for (i in lista_s){
  times <- seq(from = 0, to = 100, by = 0.1)
  parms <- c(D=0.2, s1= i, m1= 1.6,k1 =0.2,g1=0.35, m2= 1.4, k2 = 0.03,g2=0.4)
  Y0     <- c(0.001, 0.01, 0.005)
  Y1     <- c(0.001, 0.01, 0.01, 0.01, 0.005)
  out0   <- dede(Y0, times, model, parms = parms)
  out1   <- dede(Y1, times, model1, parms = parms)    
  outdf0=data.frame(out0)
  names(outdf0)=c("Time","Substrate", "Species 1", "Species 2")
  preddf0=melt(outdf0,id.var="Time",variable.name="Species",value.name="Densities")
  p=ggplot(data=preddf0,aes(x=Time,y=Densities))+geom_path(colour="blue",size=0.7)+ylim(0, NA)
  p=p+facet_wrap(~Species, scales ="free_y", ncol = 1)
  labelled=p+ 
    xlab(TeX(r"(Time ($d$) )")) +
    ylab(TeX(r"(Densities ( $\mu$ mol $L^{-1}$) )"))
  styled=labelled+theme_bw()+theme(
    plot.title = element_text(size=10, hjust = 0.5),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 10)
  )
  M1<-cbind(times,out1[,4:6])
  outdf1=data.frame(M1)
  names(outdf1)=c("Time","Substrate", "Species 1", "Species 2")
  preddf1=melt(outdf1,id.var="Time",variable.name="Species",value.name="Densities")
  p1=ggplot(data=preddf1,aes(x=Time,y=Densities))+geom_path(colour="red",size=0.7)+ylim(0, NA) 
  p1=p1+facet_wrap(~Species, scales ="free_y", ncol = 1)
  labelled1=p1+
    xlab(TeX(r"(Time ($d$) )")) +
    ylab("")
  styled1=labelled1+theme_bw()+theme(
    plot.title = element_text(size=10, hjust = 0.5),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 10)
  )
  grid.arrange(styled,styled1,nrow=1)
}
# verifying the assumption $\mathcal{A}_{1}$
for (i in lista_s){
  D=0.2 
  s1= i  
  m2= 1.4 
  k2 = 0.03
  for (j in lista_1){
    U[j]=av2(j)
  }
  V=spline(lista_1, U, n = 201, method = "fmm")
  Mb<-V$y[1:192]
  Averspl=sum(Mb)*0.125/24
  print(Averspl)
}
